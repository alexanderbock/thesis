%% latex definitions and settings for the thesis 
%%
%% $Id: thesisdefs.sty 187 2012-10-25 16:13:39Z falkmn $
%%
\NeedsTeXFormat{LaTeX2e} 
\ProvidesPackage{thesisdefs}[2011/09/06 v0.1 LaTeX definitions for the thesis]

%% Define a new 'leo' style for the package that will use a smaller font.
\makeatletter
\def\url@leostyle{%
  \@ifundefined{selectfont}{\def\UrlFont{\sf}}{\def\UrlFont{\footnotesize\ttfamily}}}
%  \@ifundefined{selectfont}{\def\UrlFont{\sf}}{\def\UrlFont{\scriptsize\ttfamily}}}
\makeatother
%% Now actually use the newly defined style.
\urlstyle{leo}


%% Code for creating empty pages
%% No headers on empty pages before new chapter
\makeatletter
\def\cleardoublepage{\clearpage\if@twoside \ifodd\c@page\else
    \hbox{}
    \thispagestyle{plain}
    \newpage
    \if@twocolumn\hbox{}\newpage\fi\fi\fi}
\makeatother \clearpage{\pagestyle{plain}\cleardoublepage}


%% new marker when a chapter begins
%\makeatletter
\newboolean{newchapterlot}
\newchapterlotfalse
\newboolean{newchapterlof}
\newchapterloffalse
\newboolean{newchapterloa}
\newchapterloafalse
%% important: when adding new list of ... insert new boolean here, 
%% and update it in \afterchpatertitle of the used chapter style
%\makeatother

%% the first caption in each chapter inserts "Chapter X" into 
%% the list of figures, tables, or algorithms for figures, tables, 
%% or algorithms respectively
\makeatletter
\let\oldcaption=\caption
\renewcommand{\caption}[2][\shortcaption]{%
  \def\shortcaption{#2}%
  \ifthenelse{\boolean{newchapter\csname ext@\@captype\endcsname}}{%
    \addtocontents{\csname ext@\@captype\endcsname}{%
      \protect\contentsline{chapter}{\@chapapp{} \thechapter \vspace{5pt}%
      }{}{}}%
    \global\csname newchapter\csname ext@\@captype\endcsname false\endcsname
    % \ifthenelse{\boolean{newchapterlot}}{lot true}{lot false}
    % \ifthenelse{\boolean{newchapterlof}}{lof true}{lof false}
  }{}%
  \oldcaption[#1]{#2}%
}
\makeatother
 

%% no space between border (fbox) and content
\setlength{\fboxsep}{0mm}

%% enable todos per default
\def\todoEnabled{}
%% disable change list per default
\def\changeListEnabled{disable}

\providecommand*{\enableTodos}{\def\todoEnabled{}}
\providecommand*{\disableTodos}{\def\todoEnabled{disable}}

\providecommand*{\enableChangeList}{\def\changeListEnabled{}}
\providecommand*{\disableChangeList}{\def\changeListEnabled{disable}}

\makeatletter
\providecommand*{\ifTodosEnabled}[1]{%
  \ifx\@empty\todoEnabled%
  #1\fi}
\providecommand*{\ifChangesEnabled}[1]{%
  \ifx\@empty\changeListEnabled%
  #1\fi}
\makeatother

%% special todo marker for my publications
\providecommand*{\published}[2]{\todo[inline,color=published,nolist]{published at #1 #2}}

%% todo markers
\newcommand{\important}[2][]{\todo[\todoEnabled,color=important,#1]{{\bfseries Important:} #2}}
\newcommand{\question}[2][]{\todo[\todoEnabled,color=question,#1]{{\bfseries Question:} #2}}
\newcommand{\insertref}[2][]{\todo[\todoEnabled,color=orange!40,#1]{{\bfseries Cite:} #2}}
\newcommand{\explainindetail}[1][]{\todo[\todoEnabled,color=blue!40,#1]{\bfseries Explain in Detail!}}
\newcommand{\minortodo}[2][]{\todo[\todoEnabled,color=minor,#1]{{\bfseries Minor:} #2}}
\newcommand{\majortodo}[2][]{\todo[\todoEnabled,color=major,#1]{{\bfseries Major:} #2}}
\newcommand{\fixme}[2][]{\todo[\todoEnabled,color=yellow!40,#1]{{\bfseries Todo:} #2}}
\newcommand{\note}[2][]{\todo[\todoEnabled,color=note,caption={\bfseries Note},inline,#1]%
  {%
    \begin{minipage}{1.0\linewidth}
      {\bfseries Note:} #2
    \end{minipage}%
  }}

\newcommand{\needsRevision}[2][]{\todo[color=nicered!18,caption={\bfseries Needs Revision},inline,#1]%
  {%\\[2ex]%
    \begin{minipage}{1.0\linewidth}
      {\bfseries Needs revision:} #2
    \end{minipage}%
  }}
%% marker for text revisions
\newcommand{\revisiontodo}[3][revised]{\todo[\changeListEnabled,color=#1]{{\bfseries #2:} #3}}


\newcounter{ccc}
\setcounter{ccc}{1}
%\newcommand{\challenge}[3][]{\todo[\todoEnabled,color=gray!10,inline,#1]{{\bfseries Challenges:} #3}}
%\newcommand{\challenge}[3][]{%
	%\hiddenlabel{#2}{C.\arabic{ccc}}
	%\todo[\todoEnabled,color=gray!10,inline,#1]{{\bfseries Challenge \ref{#2}:} #3}
	%\stepcounter{ccc}
%}
\newcommand{\challenge}[3][]{%
	\hiddenlabel{#2}{C.\arabic{ccc}}%
	\begin{tcolorbox}[enhanced jigsaw,breakable,boxrule=0.5pt,left=2mm,arc=2mm,colframe=black]%
	{\bfseries Challenge \ref{#2}:} #3
	\end{tcolorbox}%
	\stepcounter{ccc}%
}

\makeatletter
%% indicate changes (deletion, replacement, insertion)
%% remove old/deleted text and put it into a todo marker
%% optional parameter: old text
%% second parameter: new text
\newcommand{\revised}[2][\@empty]{%
  \ifthenelse{\isempty{#2}}{%
    %% deleted text
    \revisiontodo[revisionDeleted,caption={{\bfseries Deletion (\thesection):} #1}]{Deleted}{#1}%
  }{%
    \ifx\@empty#1%  %% no (old) text erased
    \revisiontodo[revisionInserted,caption={{\bfseries Insertion (\thesection):} #2}]{Inserted}{#2}%
    \else%
    \revisiontodo[revisionReplaced,caption={{\bfseries Replacment (\thesection):} ``#1'' with ``#2''}]{Replaced}{#1}%
    \fi%
    %% print changes in blue if enabled
    \ifx\@empty\changeListEnabled%
    {\color{niceblue}#2}%
    \else%
    #2{}%
    \fi%
  }%
}

%% just insert marker at current position and the list of changes
%% but print nothing
\newcommand{\corrected}[2][]{%
  \revisiontodo[revisionReplaced,caption={{\bfseries Correction (\thesection):} #2},#1]{Correction}{#2}%
}
\makeatother

%% suppress TODO type (question, important) in list of todos
%\renewcommand{\important}[2][]{\todo[color=important,caption={#2},#1]{{\bfseries Important:} #2}}
%\renewcommand{\question}[2][]{\todo[color=question,caption={#2},#1]{{\bfseries Question:} #2}}

%%%%%%%%%%%%%%%%%% abbreviation definitions %%%%%%%%%%%%%%%%%%
%\newcommand{\etal}{\textsmaller \emph{et~al.}}
\makeatletter
\newcommand\etal{et~al\@ifnextchar.{}{.\@\xspace}}
\newcommand\eg{e.g\@ifnextchar.{}{.\@\xspace}}
\newcommand\ie{i.e\@ifnextchar.{}{.\@\xspace}}
\newcommand\confer{cf\@ifnextchar.{}{.\@\xspace}}
\newcommand\etc{etc\@ifnextchar.{}{.\@\xspace}}
\makeatother
%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%% textual definitions %%%%%%%%%%%%%%%%%%
%% command to typeset phrases similar to acronym
%% (used for terms not listed in acronym table)
\newcommand*{\noacro}[1]{\texorpdfstring{{\smaller #1}}{#1}}

%% make numbers in acronyms/pdb entries appear at normal size
\newcommand{\no}[1]{{\larger #1}}

%% typeset NVIDIA smaller like acronyms
\newcommand*{\nvidia}{\noacro{NVIDIA}\xspace}
%% handle ID in a similar way
\newcommand*{\ID}{\noacro{ID}\xspace}
\newcommand*{\IDs}{\noacro{ID}s\xspace}

\newcommand*{\pdbentry}[1]{\noacro{PDB ID}: {\smaller #1}}
%% example: \pdbentry{\no{1}TUB}

%% set nD properly (1D, 2D, 3D, ...)
\newcommand*{\nD}[1]{\noacro{\no{#1}D}}

%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%% subfloat/figure definitions %%%%%%%%%%%%%%%%%%

%% set "Section x.yy" as default for \Sref
\renewcommand*{\sectionrefname}{Section~}

\newcommand{\mysubref}[2]{\ref{#1}\subref{#1#2}}
\newcommand{\fmysubref}[2]{\fref{#1}\subref{#1#2}}

%% separation between subfloats
\newlength{\imagesep}
\setlength{\imagesep}{2mm}

\newlength{\sfparskip}
\setlength{\sfparskip}{6pt} %% 10pt

%% predefined lengths for images

%% three images side-by-side
\def\imgWidthThree{47.85mm}  % 0.32429\textwidth / 585px
%% four images side-by-side
\def\imgWidthFour{35.3875mm} % 0.23983\textwidth / 418px
%%%%%%%%%%%%%%%%%%%%%%%%


%% image permission phrase for use in figures.
%% optional argument is the publisher
%%   \imgpermission[publisher]{\citep{blub2005}}
%%   gives:  Image: [reference] (c) publisher.
\makeatletter
\newcommand{\imgpermission}[2][\@empty]{%
  \par Image:%
  \ifthenelse{\isempty{#2}}{}{ #2}%
  \ifx\@empty#1%
  \else{} \textcopyright{}~#1%
  \fi\@ifnextchar.{}{\@.}}
\makeatother
%%%%%%%%%%%%%%%%%%%%%%%%

%% references to published work in the beginning of chapters or sections
% \makeatletter
% \providecommand*{\publishedin}[2][chapter]{%
%   %% temporarily redefine \natexlab{} to avoid letters 
%   %% being appended to year numbers
%   {\renewcommand*{\natexlab}[1]{}}
%   \footnote{\textbf{Parts of this #1 have been published in:} #2}}
% \makeatother

%% command with varying number of elements (separated by ',')
%% prints list separated by optional argument (default '\\')
\makeatletter
\newcommand\publishedin[2][chapter]{%
    \global\def\my@delim{\\}%
    \footnote{\textbf{Parts of this #1 have been published in:} \noindent\my@publist #2,\relax\noexpand\@eolst}}

\def\my@publist #1,#2\@eolst{%
  \renewcommand*{\natexlab}[1]{}%
  \ifx\relax#2\relax%
    \begin{NoHyper}%
      \bibentry{#1}.%
    \end{NoHyper}%
  \else%
    \begin{NoHyper}%
      \bibentry{#1}.\my@delim%
    \end{NoHyper}%
    \my@publist #2\@eolst%
  \fi}
\makeatother


%% replace simple back references in the bibliography
%% by [page x] or [pages x, y, and z]
\renewcommand*{\backref}[1]{}
\renewcommand*{\backrefalt}[4]{%
    \ifcase #1 % (Not cited.)%
    \or        [page~#2]% (Cited on page~#2.)%
    \else      [pages~#2]% (Cited on pages~#2.)%
    \fi}


%%%%%% definitions for algorithm2e
\definecolor{algoColorKeyword}{named}{niceblue}
\definecolor{algoColorComment}{named}{olive}
%\colorlet{algoColorBackground}{tablecontent!40!white} %%{niceblue!5}
\setAlgoRuleColor{niceblue}
\setAlgoBackgroundColor{niceblueVeryLight!60!white}

\setAlgoRuleWidth{1mm}

\renewcommand{\KwSty}[1]{{\color{algoColorKeyword}\textbf{#1}}}
\renewcommand{\CommentSty}[1]{{\color{algoColorComment}\texttt{#1}}}

\SetKw{kwAnd}{and}
%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%% definitions for tables / longtable package
%% adjust captions of longtable package to match the ones defined with memoir
\setlength{\LTcapwidth}{14.755cm} %% default: 4in
\setcounter{LTchunksize}{20} %% default 10 (larger number increases speed/memory consumption)
\makeatletter
\def\LT@makecaption#1#2#3{%
  %% check whether this is the first caption of the chapter...
    \noalign{%
      \ifthenelse{\boolean{newchapterlot}}{%
    \addtocontents{lot}{%
      \protect\contentsline{chapter}{\@chapapp{} \thechapter \vspace{5pt}\nobreak%
      }{}{}}%
    \global\newchapterlotfalse%
  }{}}%
  %% regular caption code...
  \LT@mcol\LT@cols c{\hbox to\z@{\hss\parbox[t]\LTcapwidth{%
    \sbox\@tempboxa{{\@contnfont{\color{niceblue}$\filledmedtriangledown$\,}#1{#2\@contdelim}} \@conttfont #3}%
    \ifdim\wd\@tempboxa>\textwidth
      {\@contnfont{\color{niceblue}$\filledmedtriangledown$\,} #1{#2\@contdelim}} \@conttfont #3%
    \else
      \hbox to\textwidth{\hfil\box\@tempboxa\hfil}%
    \fi
    \endgraf\vskip1.1\belowcaptionskip}%\vskip\baselineskip}%
  \hss}}}
\makeatother


\makeatletter
%% insert table header into long tables
%%   #4   optional column titles
%%   #1   label name
%%   #2   short caption for list of tables, if empty, full caption text is used
%%   #3   caption text
\newcommand{\longtableheader}[4]{%
  %% insert full caption if short caption is empty
  \caption[\ifx\@empty#2\@empty#3\else#2\fi]%
    {\ifx\@empty#1\@empty\else\label{#1}\fi #3}\\
    \ifx\@empty#4\@empty\else#4\fi
  \endfirsthead
  %% follow-up captions:
  \caption[]{#3 (continued)}\\
  \ifx\@empty#4\@empty\else#4\fi
  \endhead}

%% insert table header into long tables where the first header is 
%% different from the continued ones
%%   #1   label name
%%   #2   short caption for list of tables, if empty, full caption text is used
%%   #3   caption text
%%   #4   column titles of first header
%%   #5   appendage to first header for subsequent headers
\newcommand{\longtablecustomheader}[5]{%
  %% insert full caption if short caption is empty
  \caption[\ifx\@empty#2\@empty#3\else#2\fi]%
    {\ifx\@empty#1\@empty\else\label{#1}\fi #3}\\
    \ifx\@empty#4\@empty\else#4\fi
  \endfirsthead
  %% follow-up captions:
  \caption[]{#3 (continued)}\\
  \ifx\@empty#4\@empty\else#4#5\fi
  \endhead}
\makeatother


%\def\bluecol#1#2{\multicolumn{#1}{>{\columncolor{niceblue!20}}l}{#2}}
%\def\blueishcol#1#2{\multicolumn{#1}{>{\columncolor{niceblue!5}}l}{#2}}
\def\bluecol#1#2{\multicolumn{#1}{l}{\setCellColor{tablesubhead}#2}}
\def\blueishcol#1#2{\multicolumn{#1}{l}{\setCellColor{tablecontent}#2}}
%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%% useful commands for interaction with the datatool package
%% convert fps into seconds, scaled by 1/optional parameter
%% (invert the given value and multiply it by 1000)
\providecommand*{\invertFps}[2][1000]{%
  \ifthenelse{\DTLisnumerical{#2}}%
  {\DTLgdiv{\result}{#1}{#2}\DTLround{\result}{\result}{3}\result}%
  {---}}

%% convert fps into milliseconds, optional parameter for rounding
%% (invert the given value and multiply it by 1000)
\providecommand*{\invertFpsToMs}[2][3]{%
  \ifthenelse{\DTLisnumerical{#2}}%
  {\DTLgdiv{\result}{1000}{#2}\DTLround{\result}{\result}{#1}\result}%
  {---}}


%% round the given value with n significant digits and print it
\providecommand*{\roundValue}[2][3]{%
  \ifthenelse{\DTLisnumerical{#2}}%
  {\DTLground{\result}{#2}{#1}\result}%
  {---}}

%% scale the given value, round it to n significant digits, and print it
\providecommand*{\scaleValue}[3][3]{%
  \ifthenelse{\DTLisnumerical{#2}}%
  {\DTLgmul{\result}{#2}{#3}%
    \DTLround{\result}{\result}{#1}\result}%
  {---}}

%% free datatool dbs if no longer used
\providecommand*{\DTLfreeData}[1]{%
%% commands currently broken (package too old?)
%  \DTLcleardb{#1}
%  \DTLdeletedb{#1}
}
%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%% custom rules for tables to prevent white spaces 
%% for colored column heading

\newcommand{\headRowStrut}{\strut{\rule[-0.9ex]{0pt}{3.3ex}}} % -1.1ex/4ex
\newcommand{\subheadRowStrut}{\strut{\rule[-0.9ex]{0pt}{0pt}}}

\newcommand{\mytoprule}{%
  %\specialrule{\heavyrulewidth}{0pt}{0pt}%
  %\setRowColor{tablehead}
}
\newcommand{\mymidrule}{\addlinespace[\belowrulesep]}
% \arrayrulecolor{white}%
% \specialrule{\lightrulewidth}{0pt}{0.65ex}%
% \arrayrulecolor{black}
% \addlinespace[\belowrulesep]}

\newcommand{\coloredmidrule}{%
  \arrayrulecolor{niceblue}%
  \midrule[0.06em]% %% default 0.05em 
  % \specialrule{\lightrulewidth}{0pt}{0.65ex}%
  \arrayrulecolor{black}}

\newcommand{\mybottomruleOld}{\arrayrulecolor{niceblue}%
  \bottomrule[0.1em]%  %% default 0.08em
  \arrayrulecolor{black}}

\newcommand{\mybottomrule}{\addlinespace[0.7ex]}

\newcommand{\setRowColor}[1]{\rowcolor{#1}[1.02\tabcolsep]}
\newcommand{\setCellColor}[1]{\cellcolor{#1}}
\newcommand{\tableHead}[1]{\color{white}{\bfseries #1\headRowStrut}} %% \cellcolor{tablehead}

%% rounded corners for the top row of a table
%% the tabular environment is positioned inside a tikz node and the background
%% of the top row is filled separately with rounded corners at the top
\newcommand{\roundedtable}[2][6pt]{\roundedtableBottomOffset[#1]{0ex}{#2}}

\newcommand{\roundedtableBottomOffset}[3][6pt]{%
  \begin{tikzpicture}
    \node[inner sep=0pt](tbl){#3};
    \begin{pgfonlayer}{background}
      \def\boxheight{3.35ex}
      \def\boxoffset{0.14cm-3.9pt}
      \def\sepheight{0.1}
      \fill[color=niceblue] ($(tbl.north west)+(\boxoffset,-\boxheight)$) [rounded corners=#1] -- ($(tbl.north west)+(\boxoffset,0)$) -- ($(tbl.north east)-(\boxoffset,0)$) [sharp corners] -- ($(tbl.north east)-(\boxoffset,\boxheight)$)  -- cycle;

      \fill[color=niceblue] ($(tbl.south west)+(\boxoffset,\sepheight)+(0,#2)$) [rounded corners=3pt] -- ($(tbl.south west)+(\boxoffset,#2)$) -- ($(tbl.south east)-(\boxoffset,0)+(0,#2)$) [sharp corners] -- ($(tbl.south east)+(\boxoffset,\sepheight)+(0,#2)$)  -- cycle;
    \end{pgfonlayer}{background}
  \end{tikzpicture}}


%%%%%%%%%%%%%%%%%%%%%%%%

\newcommand\markHeaderLeft[1]{%
  \tikz[overlay,remember picture]\node (marker-#1-a) at (0,2.4ex) {};}

\newcommand\markHeaderRight[2]{%
  % \tikz[overlay,remember picture] \node (marker-#1-b) at (0,-0.85ex) {};%
  \begin{tikzpicture}[overlay,remember picture,inner sep=0pt]
    \node (marker-#1-b) at (0,-0.85ex) {};
    \fill[color=#2] let \p1=(marker-#1-a.center),
        \p2=(marker-#1-b.center) in
      ($(\p1) - (0.02*\tabcolsep,\y1-\y2)$) [rounded corners=6pt]
      -- ++($(0,\y1-\y2)$)
      -- ++($(\x2-\x1 + 0.04*\tabcolsep, 0)$) [sharp corners]
      -- ++(0,\y2-\y1)
      -- cycle;
  \end{tikzpicture}}

\newcommand\marktopleftBottom[1]{%
  \tikz[overlay,remember picture]\node (markerBottom-#1-a) at (0,2.4ex) {};}

\newcommand\markbottomrightBottom[1]{%
    \tikz[overlay,remember picture] \node (markerBottom-#1-b) at (0,-0.85ex) {};%
    \begin{tikzpicture}[overlay,remember picture,inner sep=0pt]
      \def\sepheight{0.1cm}
      \fill[color=niceblue] let \p1=(markerBottom-#1-a.center), 
          \p2=(markerBottom-#1-b.center) in
        ($(\p2) + (0,2.95ex-\sepheight)$) [rounded corners=2.75pt]
        -- ++(0,-\sepheight)
        -- ++($(\x1-\x2, 0)$) [sharp corners]
        -- ++(0,\sepheight)
        -- cycle;
    \end{tikzpicture}}


\newcommand{\makeTableHeader}[1]{%
  \multicolumn{#1}{!{\markHeaderLeft{c1}} c !{\markHeaderRight{c1}{tablehead}}}{}%
  \\[-3.35ex]%\addlinespace[.5mm]\addlinespace[\belowrulesep]
}
\newcommand{\makeTableSubHeader}[1]{%
  \multicolumn{#1}{!{\markHeaderLeft{c1}} c !{\markHeaderRight{c1}{tablesubhead}}}{}%
  \\[-3.35ex]%\addlinespace[.5mm]\addlinespace[\belowrulesep]
}

\newcommand{\makeTableFooter}[1]{%
  \\[-2.9ex]\multicolumn{#1}{!{\marktopleftBottom{c1}} c !{\markbottomrightBottom{c1}}}{}%
  \\\addlinespace[.5mm]\addlinespace[\belowrulesep]%
}

\renewcommand{\makeTableFooter}[1]{%
  \multicolumn{#1}{!{\marktopleftBottom{c1}} c !{\markbottomrightBottom{c1}}}{}%
  \\[-2.8ex]\addlinespace[.5mm]\addlinespace[\belowrulesep]%
}


%%%%%% custom list of data sets/videos/audio files
%% 

\newcommand{\listdatasets}{List of Data Sets}
\newlistof{listofdatasets}{lod}{\listdatasets}

\makeatletter
\newcounter{dataset}[chapter]
\renewcommand{\thedataset}{\thechapter.\arabic{dataset}}

%% four arguments:
%%   1: (optional) label
%%   2: Database/Audio/Video etc. (caption name)
%%   3: image file name
%%   4: caption text
%% remove \@contdelim if not wanted (separator between caption name and text)
\newcommand{\mydataset}[4][]{
  \refstepcounter{dataset}%
  %% \par\noindent
  \marginpar{%
    \ifx\@empty#1\@empty\else\label{#1}\fi%
    \includegraphics[height=1.8ex]{#3}{ \@contnfont #2 \thedataset\@contdelim\par}{\@conttfont #4}%  %% remove #4 if caption is not wanted in the margin
  \addcontentsline{lod}{dataset}{\protect\numberline{\thedataset} \protect\includegraphics[height=1.8ex]{#3} #4}\par}}
\makeatother
\newlistentry{dataset}{lod}{0}

\newcommand{\audio}[2][]{\mydataset[#1]{Audio}{../resources/images/test-atomic-mode}{#2}}
\newcommand{\database}[2][]{\mydataset[#1]{Database}{../resources/images/test-database.png}{#2}}
\newcommand{\video}[2][]{\mydataset[#1]{Video}{../resources/images/test-play.png}{#2}}

%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%% end of *.sty file
\endinput
%%%%%%%%%%%%%%%
